class GameMaster {		private var s:SlingShot;	//private var e_array:Array;	private var e:Elephant;		private var eTotal:Number; // total number of whales that have floated into the sky	private var savedWhales:Number; // total number of whales that have been saved	private var sets:Number; // A player could repeat level x for n times. This var tracks n.		private var elephants_mc:MovieClip;	private var gameStarter_mc:MovieClip;	private var wave_mc:MovieClip;	private var info_mc:MovieClip;	private var level:Number;	private var sunkInARow:Number;			public function GameMaster(){		elephants_mc = _root.createEmptyMovieClip("elephants", 1);		level = 1;		eTotal = sets = savedWhales = 0;		gameStarter_mc =  _root.createEmptyMovieClip("startLayer", 3); // the layer for game start button and copy				wave_mc = _root.attachMovie("wave1", "myWave", 15);		wave_mc._y = 545;		wave_mc._x = 700;		wave_mc.gotoAndPlay(150); 		makeGameStarter();		info_mc = _root.attachMovie("instructions", "info", 99);		info_mc._x = 40;		info_mc._y = 505;		info_mc._visible = false;	}		public function startGame(proceed:Boolean){		makeSlingShot();		// make instructions button visible		info_mc._visible = true;		sunkInARow = 0;		if (!proceed) {			// reset level down a notch			level -= 1; 		}		makeElephant();			}		private function makeGameStarter():Void {		var gs = gameStarter_mc.attachMovie("gameChanger", "gameChanger", 1);		info_mc._visible = false;		gs._x = 400;		gs._y = 210;		if (level > 1) {			gs.gotoAndStop(3);			gs.level = Number(this.level);			var score  = Math.floor(Number((sets * 3) / eTotal) * 100); // score is the lowest number of whales that went by divided by the actual number.			switch(level){				case 2:					gs.copy = "You saved 3 whales in a row, so you get to go to the next level. Ready?";					break;				case 3: 					gs.copy = "Another three whales in a row. Nice going. Dare to go to the next level?";					break;				case 4:					gs.copy = "Nice job, Whale-boy. You've saved " + savedWhales + " so far. Your accuracy is "+ score +"%.";					break;				case 5:					gs.copy = "You are a true friend of the whales. Very impressive performance.";					break;				case 6:					gs.copy = "The whales love you. You have almost saved them all.";					break;				case 7:					gs.gotoAndStop(4);					gs.score = score;					break;			}		}		gs.obj = this;	}				private function makeSlingShot():Void {		// make slingshot		var slingLayer:MovieClip = _root.createEmptyMovieClip("slingLayer", 2); // the layer for all  game related clips		slingLayer._x = 680;		slingLayer._y = 370;		s = new SlingShot(slingLayer);	}		private function makeElephant():Void {		// check if we've hit 3 in a row and increase level if we have		if (sunkInARow == 3){			if (level < 7) {				level++;			}			sets++; 			sunkInARow = 0;			makeGameStarter();		} else {		// make elephant			eTotal += 1;			e = new Elephant(elephants_mc, level);			e.addListener(this);			s.setElephant(e);		}			}	private function destroyElephant():Void {		e.destroy(); // call its destroy function		s.unregisterElephant(e); 		delete e;	}		private function startOver():Void {		level = 1;		startGame(true);	}		// LISTENER FOR WHEN ELEPHANT GOES OFF SCREEN	public function onGoneOffScreen():Void {		sunkInARow = 0;		destroyElephant();		makeElephant();	}		public function onSunk():Void {		sunkInARow++;		savedWhales++;		destroyElephant();		makeElephant();	}}